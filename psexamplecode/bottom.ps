% The bottom operator moves the top element in the stack to the bottom of the
% stack.  So if initially the stack was 1 2 3 4, with 4 at the top, then after
% the call to bottom the stack would be 4 1 2 3.  If the stack is empty or has
% only 1 element, then no changes are made to the stack.
/bottom {
    % add new dictionary to the dictionary stack
    1 dict begin

    count 1 gt
        {
            % swap the top two, set the new top to x, and remove it from the stack
            exch
            /x exch def
            
            % recurse down the stack
            bottom

            % add x back to the top of the stack
            x
        }
    if

    % pops the dict from the dict stack
    end
} def

1 2 3 4 bottom
